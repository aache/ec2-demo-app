version: 0.2
env:
  variables:
    IMAGE_REPO_NAME: ec2-demo-app
phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
      - REGION=${AWS_DEFAULT_REGION}
      - ECR_URI=${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com
      - aws ecr get-login-password --region ${REGION} | docker login --username AWS --password-stdin ${ECR_URI}
  build:
    commands:
      - echo Build JAR & Docker image
      - docker build -t ${IMAGE_REPO_NAME}:${CODEBUILD_RESOLVED_SOURCE_VERSION} .
      - docker tag ${IMAGE_REPO_NAME}:${CODEBUILD_RESOLVED_SOURCE_VERSION} ${ECR_URI}/${IMAGE_REPO_NAME}:${CODEBUILD_RESOLVED_SOURCE_VERSION}
      - docker tag ${IMAGE_REPO_NAME}:${CODEBUILD_RESOLVED_SOURCE_VERSION} ${ECR_URI}/${IMAGE_REPO_NAME}:latest
  post_build:
    commands:
      - echo Pushing images...
      - docker push ${ECR_URI}/${IMAGE_REPO_NAME}:${CODEBUILD_RESOLVED_SOURCE_VERSION}
      - docker push ${ECR_URI}/${IMAGE_REPO_NAME}:latest
      - echo ${CODEBUILD_RESOLVED_SOURCE_VERSION} > image_tag.txt
      - printf '{"image":"%s","tag":"%s","ecr_uri":"%s"}' "${IMAGE_REPO_NAME}" "${CODEBUILD_RESOLVED_SOURCE_VERSION}" "${ECR_URI}" > image_detail.json
artifacts:
  files:
    - appspec.yml
    - docker-compose.yml
    - scripts/**/*
    - image_tag.txt
    - image_detail.json